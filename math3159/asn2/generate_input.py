import random
import sys

list_of_primes = [8388617 , 8388619 , 8388623 , 8388637 , 8388673 , 8388683 , 8388691 , 8388697 , 8388733 , 8388739 , 8388761 , 8388763 , 8388791 , 8388811 , 8388833 , 8388841 , 8388857 , 8388881 , 8388901 , 8388923 , 8388929 , 8388949 , 8388953 , 8388971 , 8389001 , 8389019 , 8389027 , 8389039 , 8389057 , 8389061 , 8389063 , 8389079 , 8389081 , 8389093 , 8389099 , 8389103 , 8389111 , 8389123 , 8389141 , 8389153 , 8389159 , 8389163 , 8389187 , 8389201 , 8389219 , 8389231 , 8389237 , 8389261 , 8389301 , 8389309 , 8389351 , 8389361 , 8389373 , 8389441 , 8389463 , 8389489 , 8389501 , 8389519 , 8389523 , 8389541 , 8389553 , 8389559 , 8389567 , 8389603 , 8389607 , 8389651 , 8389657 , 8389669 , 8389679 , 8389681 , 8389691 , 8389699 , 8389709 , 8389727 , 8389769 , 8389781 , 8389783 , 8389793 , 8389813 , 8389819 , 8389837 , 8389877 , 8389883 , 8389897 , 8389907 , 8389919 , 8389921 , 8389937 , 8389939 , 8389943 , 8389949 , 8389951 , 8389957 , 8389967 , 8389973 , 8390021 , 8390029 , 8390047 , 8390051 , 8390069 , 8390089 , 8390093 , 8390143 , 8390183 , 8390219 , 8390227 , 8390233 , 8390257 , 8390273 , 8390287 , 8390303 , 8390311 , 8390323 , 8390329 , 8390351 , 8390359 , 8390399 , 8390413 , 8390441 , 8390443 , 8390467 , 8390471 , 8390479 , 8390497 , 8390513 , 8390531 , 8390539 , 8390549 , 8390587 , 8390593 , 8390623 , 8390663 , 8390671 , 8390687 , 8390713 , 8390717 , 8390729 , 8390731 , 8390737 , 8390743 , 8390747 , 8390771 , 8390779 , 8390783 , 8390819 , 8390857 , 8390861 , 8390867 , 8390869 , 8390873 , 8390909 , 8390927 , 8390939 , 8390959 , 8390981 , 8390999 , 8391001 , 8391011 , 8391023 , 8391037]

def random_exponents(s) :
    return(random.randint(10000,99999))

def random_integers(s) :
    return(random.randint(10000,99999))

def random_primes(s,count) :
    random.seed(s)
    return(random.sample(list_of_primes,count))

def generate_inputs(s) :
    ps = random_primes(s,3)
    
    pa = ps[0]
    ga = random_integers(s)
    xa = random_exponents(s)
    ha = ga**xa % pa
    
    pb = ps[1]
    gb = random_integers(s)
    xb = random_exponents(s)
    hb = gb**xb % pb

    pc = ps[2]
    gc = random_integers(s)
    xc = random_exponents(s)
    hc = gc**xc % pc

    print((pa,ga,ha),(pb,gb,hb),(pc,gc,hc))


if __name__ == "__main__":
    if len(sys.argv) == 1 :
        print("    Usage: run\n        python generate_input.py [last three digits of your student number]\n    to obtain three 3-tuples (p,g,h).\n    You must use your own code to compute the solution to the DLP g^x = h mod p")
    else :
        generate_inputs(int(sys.argv[1]))
        
# this returns (p,g,h) by the notation in the assignment
