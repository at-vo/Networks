


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             power, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E3A06008        MOV              r6, #nvar   ;put n in register
    5 00000004 E3A07002        MOV              r7, #xvar   ;put x in register
    6 00000008 E28FDE1A        ADR              sp, stack   ;define the stack
    7 0000000C E1A0B00D        MOV              fp, sp      ;move sp to fp
    8 00000010 E28F8F67 
                       main    ADR              r8, result  ;point to result
    9 00000014 E92D01C0        STMFD            sp!,{r6-r8} ;store x, n and y (
                                                            temp variable) in s
                                                            tack
   10 00000018 EB000004        BL               pow         ;call power functio
                                                            n 
   11 0000001C E51BA004        LDR              r10, [fp,#Y] ;load final y from
                                                             frame
   12 00000020 E588A000        STR              r10, [r8]   ;store final y in r
                                                            esult variable
   13 00000024 E1A0D00B        MOV              sp,fp       ;restore the stack 
                                                            pointer
   14 00000028 E59DB000        LDR              fp,[sp]     ;restore old frame 
                                                            pointer from the st
                                                            ack
   15 0000002C EF000011        SWI              0x11        ;call O/S to termin
                                                            ate
   16 00000030         
   17 00000030 E92D4800 
                       pow     STMFD            sp!,{fp,lr} ;store frame and li
                                                            nk register on stac
                                                            k then update stack
                                                             pointer
   18 00000034 E1A0B00D        MOV              fp, sp      ;fp point to base o
                                                            f frame
   19 00000038 E24DD004        SUB              sp, sp, #Y_Spc ;move sp up 4 by
                                                            tes for y
   20 0000003C E59B900C        LDR              r9,[fp,#X_prev] ;get x from pre
                                                            vious stack frame
   21 00000040 E92D0200        STMFD            sp!, {r9}   ;push x on the stac
                                                            k and update sp
   22 00000044 E59B9008        LDR              r9,[fp,#N_prev] ;get n from pre
                                                            vious stack frame
   23 00000048 E3590000        CMP              r9, #0      ;compare n from pre
                                                            vious with zero
   24 0000004C 03A0A001        MOVEQ            r10, #1     ;move 1 to temp poi
                                                            nter if equal
   25 00000050 0A000010        BEQ              rest        ;branch rest to res
                                                            tore
   26 00000054         ;else
   27 00000054 E90D0200        STMFD            sp, {r9}    ;push n on the stac
                                                            k
   28 00000058 E2199001        ANDS             r9, r9, #1  ;AND temp pointer w
                                                            ith 1 to check if n
                                                             is odd
   29 0000005C 0A000007        BEQ              even        ;if zero flag is up
                                                            dated n is even so 
                                                            branch to even
   30 00000060         ;else n is odd so,
   31 00000060 E51B900C 
                       odd     LDR              r9,[fp,#N]  ;load n to temp



ARM Macro Assembler    Page 2 


   32 00000064 E2499001        SUB              r9, r9, #1  ;subtract 1 from n
   33 00000068 E92D0200        STMFD            sp!, {r9}   ;push n on the stac
                                                            k and increment sta
                                                            ck pointer
   34 0000006C EBFFFFEF        BL               pow         ;call power functio
                                                            n with new n value
   35 00000070         ;after power function recursion
   36 00000070 E51B9004        LDR              r9,[fp,#Y]  ;load y from next f
                                                            rame into temp poin
                                                            ter
   37 00000074 E51BA008        LDR              r10, [fp,#X] ;load x from frame
                                                            
   38 00000078 E00A0A99        MUL              r10, r9, r10 ;muliply y from ne
                                                            xt frame with x and
                                                             store in temp poin
                                                            ter
   39 0000007C EA000005        B                rest        ;branch to rest to 
                                                            return
   40 00000080         
   41 00000080 E51B900C 
                       even    LDR              r9, [fp,#N] ;load n to temp poi
                                                            nter
   42 00000084 E1A090A9        LSR              r9, r9, #1  ;divide n by 2
   43 00000088 E92D0200        STMFD            sp!, {r9}   ;push n on the stac
                                                            k and increment sta
                                                            ck pointer
   44 0000008C EBFFFFE7        BL               pow         ;call power functio
                                                            n with new n
   45 00000090         ;after power function recursion
   46 00000090 E51B9004        LDR              r9,[fp,#Y]  ;load y from next f
                                                            rame into temp poin
                                                            ter
   47 00000094 E00A0999        MUL              r10, r9, r9 ;multiply y * y and
                                                             store in temp poin
                                                            ter
   48 00000098         ;now return
   49 00000098 E58BA010 
                       rest    STR              r10, [fp,#return] ;store temp p
                                                            ointer in y(temp va
                                                            riable)
   50 0000009C E1A0D00B        MOV              sp,fp       ;restore the stack 
                                                            pointer
   51 000000A0 E59DB000        LDR              fp,[sp]     ;restore old frame 
                                                            pointer from stack
   52 000000A4 E28DD004        ADD              sp, sp, #link ;move stack point
                                                            er down 4 bytes to 
                                                            lr
   53 000000A8 E59DE000        LDR              lr, [sp]    ;return by loading 
                                                            sp value to lr
   54 000000AC E1A0F00E        MOV              pc,lr       ;return to previous
                                                             frame
   55 000000B0         
   56 000000B0                 AREA             power, DATA, READWRITE
   57 000000B0 00000004 
                       Y_Spc   EQU              4           ;space needed for r
                                                            eturn value Y
   58 000000B0 FFFFFFFC 
                       Y       EQU              -4          ;y in current frame
                                                            



ARM Macro Assembler    Page 3 


   59 000000B0 FFFFFFF8 
                       X       EQU              -8          ;x in current frame
                                                            
   60 000000B0 FFFFFFF4 
                       N       EQU              -12         ;n in current frame
                                                            
   61 000000B0 00000008 
                       N_prev  EQU              8           ;n in previous fram
                                                            e
   62 000000B0 0000000C 
                       X_prev  EQU              12          ;x in previous fram
                                                            e
   63 000000B0 00000010 
                       return  EQU              16          ;return y to previo
                                                            us frame
   64 000000B0 00000004 
                       link    EQU              4           ;stack pointer to l
                                                            ink register
   65 000000B0 00000002 
                       xvar    EQU              2           ;constant x
   66 000000B0 00000008 
                       nvar    EQU              8           ;constant n
   67 000000B0 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00               space            0x100       ;stack space
   68 000001B0 00      stack   DCB              0x00        ;Base of the stack
   69 000001B1 00 00 00 
              000000FF result  DCD              0xFF        ;result variable
   70 000001B8                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\power.d -o.\power
.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 
1" --list=.\power.lst power.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

even 00000080

Symbol: even
   Definitions
      At line 41 in file power.s
   Uses
      At line 29 in file power.s
Comment: even used once
main 00000010

Symbol: main
   Definitions
      At line 8 in file power.s
   Uses
      None
Comment: main unused
odd 00000060

Symbol: odd
   Definitions
      At line 31 in file power.s
   Uses
      None
Comment: odd unused
pow 00000030

Symbol: pow
   Definitions
      At line 17 in file power.s
   Uses
      At line 10 in file power.s
      At line 34 in file power.s
      At line 44 in file power.s

power 00000000

Symbol: power
   Definitions
      At line 1 in file power.s
   Uses
      None
Comment: power unused
rest 00000098

Symbol: rest
   Definitions
      At line 49 in file power.s
   Uses
      At line 25 in file power.s
      At line 39 in file power.s

result 000001B4

Symbol: result
   Definitions
      At line 69 in file power.s
   Uses
      At line 8 in file power.s
Comment: result used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

stack 000001B0

Symbol: stack
   Definitions
      At line 68 in file power.s
   Uses
      At line 6 in file power.s
Comment: stack used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N FFFFFFF4

Symbol: N
   Definitions
      At line 60 in file power.s
   Uses
      At line 31 in file power.s
      At line 41 in file power.s

N_prev 00000008

Symbol: N_prev
   Definitions
      At line 61 in file power.s
   Uses
      At line 22 in file power.s
Comment: N_prev used once
X FFFFFFF8

Symbol: X
   Definitions
      At line 59 in file power.s
   Uses
      At line 37 in file power.s
Comment: X used once
X_prev 0000000C

Symbol: X_prev
   Definitions
      At line 62 in file power.s
   Uses
      At line 20 in file power.s
Comment: X_prev used once
Y FFFFFFFC

Symbol: Y
   Definitions
      At line 58 in file power.s
   Uses
      At line 11 in file power.s
      At line 36 in file power.s
      At line 46 in file power.s

Y_Spc 00000004

Symbol: Y_Spc
   Definitions
      At line 57 in file power.s
   Uses
      At line 19 in file power.s
Comment: Y_Spc used once
link 00000004

Symbol: link
   Definitions
      At line 64 in file power.s
   Uses
      At line 52 in file power.s
Comment: link used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

nvar 00000008

Symbol: nvar
   Definitions
      At line 66 in file power.s
   Uses
      At line 4 in file power.s
Comment: nvar used once
return 00000010

Symbol: return
   Definitions
      At line 63 in file power.s
   Uses
      At line 49 in file power.s
Comment: return used once
xvar 00000002

Symbol: xvar
   Definitions
      At line 65 in file power.s
   Uses
      At line 5 in file power.s
Comment: xvar used once
10 symbols
349 symbols in table
