


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question1, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         ; r2 - string1 pointer
    4 00000000         ; r3 - string2 pointer 
    5 00000000         ; r4 - string1 character   
    6 00000000         ; r5 - EoS pointer
    7 00000000 E28F2058        ADR              r2, STRING1 ;point r2 to string
                                                            1
    8 00000004 E28F3064        ADR              r3, STRING2 ;point r3 to string
                                                            2
    9 00000008 E28F505F        ADR              r5, EoS     ;point r5 to end of
                                                             string1
   10 0000000C         
   11 0000000C         ; main loop
   12 0000000C E1520005 
                       loop    CMP              r2, r5      ;check if at end of
                                                             string1
   13 00000010 0A000011        BEQ              leave       ;leave loop if at e
                                                            nd
   14 00000014         ;else
   15 00000014 E5D24000        LDRB             r4, [r2]    ;load character of 
                                                            string1 to r4 
   16 00000018 E3540074        CMP              r4, #'t'    ;compare letter of 
                                                            string1 with 't'
   17 0000001C 05D24001        LDRBEQ           r4, [r2,#scd] ;if first charact
                                                            er is 't' load char
                                                            acter of string1 of
                                                            fset 1 to r4 to fin
                                                            d h
   18 00000020 03540068        CMPEQ            r4, #'h'    ;compare letter of 
                                                            string1 with 'h'
   19 00000024 05D24002        LDRBEQ           r4, [r2,#thd] ;if second letter
                                                             is 'h' load charac
                                                            ter of string1 offs
                                                            et 2 to r4 to find 
                                                            e
   20 00000028 03540065        CMPEQ            r4, #'e'    ;compare letter of 
                                                            string1 with 'e'
   21 0000002C 05D24003        LDRBEQ           r4, [r2, #frt] ;if third letter
                                                             is 'e' load charac
                                                            ter of string1 offs
                                                            et 3 to r4 to find 
                                                            a space
   22 00000030 03540020        CMPEQ            r4, #spc    ;check if pointer a
                                                            t a space, if it is
                                                            , then the word is 
                                                            'the'
   23 00000034 02822003        ADDEQ            r2, r2, #skip ;so skip 3 charac
                                                            ters in string1
   24 00000038 0AFFFFF3        BEQ              loop        ;go back to Tloop t
                                                            o check for another
                                                             'the'
   25 0000003C E3540000        CMP              r4, #nul    ;else check if poin
                                                            ter at end
   26 00000040 0A000005        BEQ              leave       ;if null char then 
                                                            reached end of stri
                                                            ng1, so leave
   27 00000044         ;else if first letter is not 't', and second is not 'h',
                       



ARM Macro Assembler    Page 2 


   28 00000044         ;and third is not 'e' and fourth is not a space,
   29 00000044         ;then word is not 'the' so add letter to string2
   30 00000044 E4D24001 
                       store   LDRB             r4, [r2], #incr ;load character
                                                             of string1 to r4 t
                                                            hen increment strin
                                                            g1
   31 00000048 E4C34001        STRB             r4, [r3], #incr ;store the lett
                                                            er into string2 the
                                                            n increment r3
   32 0000004C E3540020        CMP              r4, #spc    ;check if at a spac
                                                            e
   33 00000050 0AFFFFED        BEQ              loop        ;if at space then w
                                                            ant to check if nex
                                                            t word is 'the'
   34 00000054 E3540000        CMP              r4, #nul    ;else check if poin
                                                            ter at end 
   35 00000058 1AFFFFF9        BNE              store       ;if not then go bac
                                                            k to store
   36 0000005C         ;else
   37 0000005C EAFFFFFE 
                       leave   B                leave       ;terminate with loo
                                                            p
   38 00000060         
   39 00000060         ; DATA DIRECTIVES 
   40 00000060                 AREA             question1, DATA, READWRITE
   41 00000060 00000001 
                       scd     EQU              1           ;second letter of w
                                                            ord offset
   42 00000060 00000002 
                       thd     EQU              2           ;third letter of wo
                                                            rd offset
   43 00000060 00000003 
                       frt     EQU              3           ;fourth letter of w
                                                            ord offset
   44 00000060 00000003 
                       skip    EQU              3           ;skip 'the' constan
                                                            t
   45 00000060 00000001 
                       incr    EQU              1           ;constant for incre
                                                            ment
   46 00000060 00000020 
                       spc     EQU              0x20        ;constant for space
                                                             character
   47 00000060 00000000 
                       nul     EQU              0x00        ;constant for nul c
                                                            haracter
   48 00000060 74 68 65 
              20 54 48 
              45 6D 20 
              74 68 20 
              74 68 65 STRING1 DCB              "the THEm th the" ;String1 
   49 0000006F 00      EoS     DCB              0x00        ;end of string1 
   50 00000070                 ALIGN
   51 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING2 SPACE            0xFF        ;just allocating 25
                                                            5 bytes
   52 0000016F                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\q1.d -o.\q1.o -IC
:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --l
ist=.\q1.lst q1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EoS 0000006F

Symbol: EoS
   Definitions
      At line 49 in file q1.s
   Uses
      At line 9 in file q1.s
Comment: EoS used once
STRING1 00000060

Symbol: STRING1
   Definitions
      At line 48 in file q1.s
   Uses
      At line 7 in file q1.s
Comment: STRING1 used once
STRING2 00000070

Symbol: STRING2
   Definitions
      At line 51 in file q1.s
   Uses
      At line 8 in file q1.s
Comment: STRING2 used once
leave 0000005C

Symbol: leave
   Definitions
      At line 37 in file q1.s
   Uses
      At line 13 in file q1.s
      At line 26 in file q1.s
      At line 37 in file q1.s

loop 0000000C

Symbol: loop
   Definitions
      At line 12 in file q1.s
   Uses
      At line 24 in file q1.s
      At line 33 in file q1.s

question1 00000000

Symbol: question1
   Definitions
      At line 1 in file q1.s
   Uses
      None
Comment: question1 unused
store 00000044

Symbol: store
   Definitions
      At line 30 in file q1.s
   Uses
      At line 35 in file q1.s
Comment: store used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

frt 00000003

Symbol: frt
   Definitions
      At line 43 in file q1.s
   Uses
      At line 21 in file q1.s
Comment: frt used once
incr 00000001

Symbol: incr
   Definitions
      At line 45 in file q1.s
   Uses
      At line 30 in file q1.s
      At line 31 in file q1.s

nul 00000000

Symbol: nul
   Definitions
      At line 47 in file q1.s
   Uses
      At line 25 in file q1.s
      At line 34 in file q1.s

scd 00000001

Symbol: scd
   Definitions
      At line 41 in file q1.s
   Uses
      At line 17 in file q1.s
Comment: scd used once
skip 00000003

Symbol: skip
   Definitions
      At line 44 in file q1.s
   Uses
      At line 23 in file q1.s
Comment: skip used once
spc 00000020

Symbol: spc
   Definitions
      At line 46 in file q1.s
   Uses
      At line 22 in file q1.s
      At line 32 in file q1.s

thd 00000002

Symbol: thd
   Definitions
      At line 42 in file q1.s
   Uses
      At line 19 in file q1.s
Comment: thd used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

7 symbols
345 symbols in table
