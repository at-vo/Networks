


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog1, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E59F0074        LDR              r0, =STRING1 ;Loads the memory 
                                                            of Location of STRI
                                                            NG1 into r0 (SOURCE
                                                            )
    5 00000004 E59F1074        LDR              r1, =STRING2 ;Loads the memory 
                                                            of Location of STRI
                                                            NG1 into r1 (DESTIN
                                                            ATION)
    6 00000008         
    7 00000008         
    8 00000008 E5D02000        LDRB             r2, [r0]    ;******************
                                                            ****** BASE CASE --
                                                             "the" is at the be
                                                            ginning of STRING1.
                                                            ... r2 is a pointer
                                                             "scanning" through
                                                             STRING1
    9 0000000C         
   10 0000000C E3520074        CMP              r2, #'t'    ;If string starts w
                                                            ith t, then still c
                                                            ould be "the" subst
                                                            ring...
   11 00000010 1A000010        BNE              STORE       ;If string does NOT
                                                             with start with "t
                                                            ", branch elsewhere
                                                            , won't be this cas
                                                            e....
   12 00000014         
   13 00000014 E2899001        ADD              r9, r9, #1  ;Increment the offs
                                                            et from the beginni
                                                            ng of string - get 
                                                            to next character
   14 00000018 E7D02009        LDRB             r2, [r0, r9] ;Load the next byt
                                                            e into the register
                                                             -- to check for su
                                                            cceeding 'h' after 
                                                            't'
   15 0000001C E3520068        CMP              r2, #'h'    ;If string starts w
                                                            ith "th", then stil
                                                            l could be "the" su
                                                            bstring...       
   16 00000020 1A00000C        BNE              STORE       ;If string does NOT
                                                             with start with "t
                                                            h", branch elsewher
                                                            e, won't be this ca
                                                            se....
   17 00000024         
   18 00000024 E2899001        ADD              r9, r9, #1  ;Increment the offs
                                                            et from the beginni
                                                            ng of string - get 
                                                            to next character
   19 00000028 E7D02009        LDRB             r2, [r0, r9] ;Load the next byt
                                                            e into the register
                                                             -- to check for su
                                                            cceeding 'e' after 
                                                            "th"



ARM Macro Assembler    Page 2 


   20 0000002C E3520065        CMP              r2, #'e'    ;If string starts w
                                                            ith "the", then sti
                                                            ll could be "the" s
                                                            ubstring...
   21 00000030 1A000008        BNE              STORE       ;f string does NOT 
                                                            with start with "th
                                                            e", branch elsewher
                                                            e, won't be this ca
                                                            se....
   22 00000034         
   23 00000034 E2800003        ADD              r0, r0, #3  ;String WAS found t
                                                            o start with "the",
                                                             therefore "DELETE"
                                                             this from the stri
                                                            ng... (skip over it
                                                            , 3 bytes...)
   24 00000038         
   25 00000038         ;DO NOT ACCOUNT FOR SUCCEEDING SPACE after "the" because
                        there can be a string with just "the" 
   26 00000038         
   27 00000038         
   28 00000038         ;************************ NON-BASECASE -- "the" is NOT t
                       he beginning of STRING1; somewhere in the middle or end.
                       ...
   29 00000038         CHECK
   30 00000038 E5512002        LDRB             r2, [r1, #-2] ; Check 
   31 0000003C E3520020        CMP              r2, #' '    ; previous char is 
                                                            space?
   32 00000040         
   33 00000040 05D12000        LDRBEQ           r2, [r1]    ; if yes
   34 00000044 03520068        CMPEQ            r2, #'h'    ; next char is 'h'?
                                                            
   35 00000048         
   36 00000048 05D12001        LDRBEQ           r2, [r1, #1] ; if yes
   37 0000004C 03520065        CMPEQ            r2, #'e'    ; next char is 'e'?
                                                            
   38 00000050 02822003        ADDEQ            r2, #3      ; if yes, 'the' is 
                                                            found
   39 00000054 EAFFFFFF        B                STORE
   40 00000058         
   41 00000058         
   42 00000058         
   43 00000058         ;************************  This is the loop which will s
                       can STRING1, and store data into STRING2 accordingly...
   44 00000058 E4D03001 
                       STORE   LDRB             r3, [r0], #1
   45 0000005C E3530074        CMP              r3, #'t'
   46 00000060 DAFFFFF4        BLE              CHECK
   47 00000064 E7C1300A        STRB             r3, [r1, r10]
   48 00000068 E28AA001        ADD              r10, r10, #1
   49 0000006C E3530000        CMP              r3, #0x00
   50 00000070 1AFFFFF8        BNE              STORE
   51 00000074 EAFFFFFF        B                EXIT
   52 00000078         
   53 00000078         
   54 00000078         
   55 00000078 EAFFFFFE 
                       EXIT    B                EXIT        ;*******FINAL LOOP*
                                                            ****** - TO TERMINA



ARM Macro Assembler    Page 3 


                                                            TE THE PROGRAM
   56 0000007C 00000000 
              00000000         AREA             prog1, DATA, READWRITE
   57 00000084         
   58 00000084 61 6E 64 
              20 74 68 
              65 20 6D 
              61 6E 20 
              73 61 69 
              64 20 74 
              68 65 79 
              20 6D 75 
              73 74 20 
              67 6F    STRING1 DCB              "and the man said they must go"
   59 000000A1 21      EoS     DCB              0x21
   60 000000A2 00 00           align
   61 000000A4 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING2 space            0xFF
   62 000001A3                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog1.d -o.\prog1
.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 
1" --list=.\prog1.lst D:\Downloads\prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK 00000038

Symbol: CHECK
   Definitions
      At line 29 in file D:\Downloads\prog1.s
   Uses
      At line 46 in file D:\Downloads\prog1.s
Comment: CHECK used once
EXIT 00000078

Symbol: EXIT
   Definitions
      At line 55 in file D:\Downloads\prog1.s
   Uses
      At line 51 in file D:\Downloads\prog1.s
      At line 55 in file D:\Downloads\prog1.s

EoS 000000A1

Symbol: EoS
   Definitions
      At line 59 in file D:\Downloads\prog1.s
   Uses
      None
Comment: EoS unused
STORE 00000058

Symbol: STORE
   Definitions
      At line 44 in file D:\Downloads\prog1.s
   Uses
      At line 11 in file D:\Downloads\prog1.s
      At line 16 in file D:\Downloads\prog1.s
      At line 21 in file D:\Downloads\prog1.s
      At line 39 in file D:\Downloads\prog1.s
      At line 50 in file D:\Downloads\prog1.s

STRING1 00000084

Symbol: STRING1
   Definitions
      At line 58 in file D:\Downloads\prog1.s
   Uses
      At line 4 in file D:\Downloads\prog1.s
Comment: STRING1 used once
STRING2 000000A4

Symbol: STRING2
   Definitions
      At line 61 in file D:\Downloads\prog1.s
   Uses
      At line 5 in file D:\Downloads\prog1.s
Comment: STRING2 used once
prog1 00000000

Symbol: prog1
   Definitions
      At line 1 in file D:\Downloads\prog1.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: prog1 unused
7 symbols
340 symbols in table
