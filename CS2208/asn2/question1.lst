


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             question1, CODE, READWRITE
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         ; ini
    5 00000000 E28F2048        ADR              r2, STRING1 ;point r2 to string
                                                            1
    6 00000004 E28F3064        ADR              r3, STRING2 ;point r3 to string
                                                            2
    7 00000008         
    8 00000008         ; Main loop
    9 00000008 E5D24000 
                       loop    LDRB             r4, [r2]    ;load character of 
                                                            string1 to r4 
   10 0000000C E3540074        CMP              r4, #'t'    ;compare letter of 
                                                            string1 with 't'
   11 00000010 05D24001        LDRBEQ           r4, [r2,#scd] ;if first charact
                                                            er is 't' load char
                                                            acter of string1 of
                                                            fset 1 to r4 to fin
                                                            d h
   12 00000014 03540068        CMPEQ            r4, #'h'    ;compare letter of 
                                                            string1 with 'h'
   13 00000018 05D24002        LDRBEQ           r4, [r2,#thd] ;if second letter
                                                             is 'h' load charac
                                                            ter of string1 offs
                                                            et 2 to r4 to find 
                                                            e
   14 0000001C 03540065        CMPEQ            r4, #'e'    ;compare letter of 
                                                            string1 with 'e' th
                                                            en check terminatin
                                                            g char of 'the' wor
                                                            d
   15 00000020 05D24003        LDRBEQ           r4, [r2, #frt] ;if third letter
                                                             is 'e' load charac
                                                            ter of string1 offs
                                                            et 3 to r4 to find 
                                                            a space
   16 00000024 03540020        CMPEQ            r4, #spc    ;check if pointer a
                                                            t a space, if it is
                                                            , then the word is 
                                                            'the'
   17 00000028 02822003        ADDEQ            r2, r2, #skip ;so skip 3 charac
                                                            ters in string1
   18 0000002C E3540000        CMP              r4, #nul    ;else check if poin
                                                            ter at end
   19 00000030 0A000005        BEQ              leave       ;if null char then 
                                                            reached end of stri
                                                            ng1, so leave
   20 00000034         ;else if first letter is not 't', and second is not 'h',
                       
   21 00000034         ;and third is not 'e' and fourth is not a space,
   22 00000034         ;then word is not 'the' so add letter to string2
   23 00000034 E4D24001 
                       store   LDRB             r4, [r2], #incr ;load character
                                                             of string1 offset 
                                                            3 to r4 to find a s
                                                            pace
   24 00000038 E4C34001        STRB             r4, [r3], #incr ;store the lett
                                                            er into string2 the



ARM Macro Assembler    Page 2 


                                                            n increment r3
   25 0000003C E3540020        CMP              r4, #spc    ;check if at a spac
                                                            e
   26 00000040 0AFFFFF0        BEQ              loop        ;if at space then g
                                                            o back to Tloop to 
                                                            check for 'the'
   27 00000044 E3540000        CMP              r4, #nul    ;check if null char
                                                            acter
   28 00000048 1AFFFFF9        BNE              store       ;if not then go bac
                                                            k to store to check
                                                             for another charac
                                                            ter 
   29 0000004C         ;else a null character
   30 0000004C EAFFFFFE 
                       leave   B                leave       ;terminate with loo
                                                            p
   31 00000050         
   32 00000050         ; DATA DIRECTIVES 
   33 00000050                 AREA             question1, DATA, READWRITE
   34 00000050 00000001 
                       scd     EQU              1           ;second letter of w
                                                            ord offset
   35 00000050 00000002 
                       thd     EQU              2           ;third letter of wo
                                                            rd offset
   36 00000050 00000003 
                       frt     EQU              3           ;fourth letter of w
                                                            ord offset
   37 00000050 00000003 
                       skip    EQU              3           ;skip 'the' constan
                                                            t
   38 00000050 00000001 
                       incr    EQU              1           ;constant for incre
                                                            ment
   39 00000050 00000020 
                       spc     EQU              0x20        ;constant for space
                                                             character
   40 00000050 00000000 
                       nul     EQU              0x00        ;constant for nul c
                                                            haracter
   41 00000050 61 6E 64 
              20 74 68 
              65 20 6D 
              61 6E 20 
              73 61 69 
              64 20 74 
              68 65 79 
              20 6D 75 
              73 74 20 
              67 6F    STRING1 DCB              "and the man said they must go"
 
                                                            ;String1 
   42 0000006D 00      EoS     DCB              0x00        ;end of string1 
   43 0000006E 00 00           ALIGN
   44 00000070 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING2 SPACE            0xFF        ;just allocating 25
                                                            5 bytes
   45 0000016F                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\question1.d -o.\q
uestion1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EV
AL SETA 1" --list=.\question1.lst question1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EoS 0000006D

Symbol: EoS
   Definitions
      At line 42 in file question1.s
   Uses
      None
Comment: EoS unused
STRING1 00000050

Symbol: STRING1
   Definitions
      At line 41 in file question1.s
   Uses
      At line 5 in file question1.s
Comment: STRING1 used once
STRING2 00000070

Symbol: STRING2
   Definitions
      At line 44 in file question1.s
   Uses
      At line 6 in file question1.s
Comment: STRING2 used once
leave 0000004C

Symbol: leave
   Definitions
      At line 30 in file question1.s
   Uses
      At line 19 in file question1.s
      At line 30 in file question1.s

loop 00000008

Symbol: loop
   Definitions
      At line 9 in file question1.s
   Uses
      At line 26 in file question1.s
Comment: loop used once
question1 00000000

Symbol: question1
   Definitions
      At line 1 in file question1.s
   Uses
      None
Comment: question1 unused
store 00000034

Symbol: store
   Definitions
      At line 23 in file question1.s
   Uses
      At line 28 in file question1.s
Comment: store used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

frt 00000003

Symbol: frt
   Definitions
      At line 36 in file question1.s
   Uses
      At line 15 in file question1.s
Comment: frt used once
incr 00000001

Symbol: incr
   Definitions
      At line 38 in file question1.s
   Uses
      At line 23 in file question1.s
      At line 24 in file question1.s

nul 00000000

Symbol: nul
   Definitions
      At line 40 in file question1.s
   Uses
      At line 18 in file question1.s
      At line 27 in file question1.s

scd 00000001

Symbol: scd
   Definitions
      At line 34 in file question1.s
   Uses
      At line 11 in file question1.s
Comment: scd used once
skip 00000003

Symbol: skip
   Definitions
      At line 37 in file question1.s
   Uses
      At line 17 in file question1.s
Comment: skip used once
spc 00000020

Symbol: spc
   Definitions
      At line 39 in file question1.s
   Uses
      At line 16 in file question1.s
      At line 25 in file question1.s

thd 00000002

Symbol: thd
   Definitions
      At line 35 in file question1.s
   Uses
      At line 13 in file question1.s
Comment: thd used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

7 symbols
345 symbols in table
